{"version":3,"sources":["api/api.js","api/posts.js","components/PostsList/PostsList.jsx","api/comments.js","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["BASE_URL","getUserPosts","a","fetch","response","json","data","getPostDetails","postId","PostsList","selectedPostId","setSelectedPostId","useState","posts","setPosts","getPosts","useEffect","className","map","post","key","id","userId","title","type","onClick","getPostComments","responseJSON","filterData","filter","item","NewCommentForm","grabUpdatedInfo","newName","setName","email","setEmail","body","setBody","handleChange","event","target","name","value","onSubmit","preventDefault","newComment","placeholder","onChange","PostDetails","postsDetails","setDetails","comments","setComments","toggleButton","setToggleButton","getDetails","getComments","length","comment","method","then","headers","JSON","stringify","pushPostComments","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a37ae182.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import { BASE_URL } from './api';\n\nexport const getUserPosts = async() => {\n  const response = await fetch(`${BASE_URL}/posts`);\n  const data = await response.json();\n\n  return data;\n};\n\nexport const getPostDetails = async(postId) => {\n  const response = await fetch(`${BASE_URL}/posts/${postId}`);\n  const data = await response.json();\n\n  return data;\n};\n\nexport const createPost = async() => {\n  const response = await fetch(`${BASE_URL}/comments/256`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({\n      id: 256,\n      body: 'comment',\n    }),\n  });\n  const data = await response.json();\n\n  return data;\n};\n\n// createPost();\n","import React, { useEffect, useState } from 'react';\nimport { getUserPosts } from '../../api/posts';\nimport './PostsList.scss';\n\nexport const PostsList = ({ selectedPostId, setSelectedPostId }) => {\n  const [posts, setPosts] = useState([]);\n\n  const getPosts = async() => {\n    const response = await getUserPosts();\n\n    setPosts(response.data);\n  };\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li\n            key={post.id}\n            className=\"PostsList__item\"\n          >\n            <div>\n              <b>\n                [User #\n                {post.userId}\n                ]:\n                {' '}\n              </b>\n              {post.title}\n            </div>\n            {selectedPostId === post.id ? (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => {\n                  setSelectedPostId(null);\n                }}\n              >\n                Close\n              </button>\n            ) : (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => {\n                  setSelectedPostId(post.id);\n                }}\n              >\n                Open\n              </button>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import { BASE_URL } from './api';\n\nexport const getPostComments = async() => {\n  const response = await fetch(`${BASE_URL}/comments`);\n  const responseJSON = await response.json();\n  const { data } = responseJSON;\n  const filterData = data.filter(item => item.postId);\n\n  return filterData;\n};\n\nexport const pushPostComments = newComment => fetch(`${BASE_URL}/comments`, {\n  method: 'POST',\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n  body: JSON.stringify({\n    ...newComment,\n  }),\n});\n\nexport const deletePostComments\n= postId => fetch(`${BASE_URL}/comments/${postId}`, {\n  method: 'DELETE',\n});\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ selectedPostId, grabUpdatedInfo }) => {\n  const [newName, setName] = useState({});\n  const [email, setEmail] = useState({});\n  const [body, setBody] = useState({});\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        return setName({ [name]: value });\n      case 'email':\n        return setEmail({ [name]: value });\n      case 'body':\n        return setBody({ [name]: value });\n\n      default: {\n        return null;\n      }\n    }\n  };\n\n  const onSumbit = (event) => {\n    event.preventDefault();\n\n    const newComment = {\n      postId: selectedPostId,\n      ...newName,\n      ...email,\n      ...body,\n    };\n\n    grabUpdatedInfo(newComment);\n\n    return newComment;\n  };\n\n  return (\n    <form onSubmit={onSumbit} className=\"NewCommentForm\">\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          onChange={handleChange}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          onChange={handleChange}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          onChange={handleChange}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  selectedPostId: PropTypes.number.isRequired,\n  grabUpdatedInfo: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport { getPostDetails } from '../../api/posts';\nimport { getPostComments, pushPostComments, deletePostComments } from '../../api/comments';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\nexport const PostDetails = ({ selectedPostId }) => {\n  const [postsDetails, setDetails] = useState([]);\n  const [comments, setComments] = useState([]);\n  const [toggleButton, setToggleButton] = useState(false);\n\n  const getDetails = async() => {\n    const response = await getPostDetails(selectedPostId);\n\n    setDetails(response.data);\n  };\n\n  const getComments = async() => {\n    const response = await getPostComments();\n    const filterData = response\n      .filter(item => (item.postId === selectedPostId));\n\n    setComments(filterData);\n  };\n\n  const grabUpdatedInfo = (newComment) => {\n    pushPostComments(newComment)\n      .then(getComments);\n  };\n\n  useEffect(() => {\n    getDetails();\n  }, [selectedPostId]);\n\n  useEffect(() => {\n    getComments();\n  }, [selectedPostId]);\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>\n          {postsDetails.title}\n        </p>\n        <h3>Body</h3>\n        <p>\n          {postsDetails.body}\n        </p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        {toggleButton ? (\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={() => setToggleButton(false)}\n          >\n            {`Hide ${comments.length} comments`}\n          </button>\n        ) : (\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={() => setToggleButton(true)}\n          >\n            {`Show ${comments.length} comments`}\n          </button>\n        )}\n\n        {toggleButton && (\n          <ul className=\"PostDetails__list\">\n            {comments.map(comment => (\n              <li\n                className=\"PostDetails__list-item\"\n                key={comment.id}\n              >\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => {\n                    deletePostComments(comment.id)\n                      .then(getComments);\n                  }}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            selectedPostId={selectedPostId}\n            grabUpdatedInfo={grabUpdatedInfo}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nconst App = () => {\n  const [selectedPostId, setSelectedPostId] = useState(0);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select className=\"App__user-selector\">\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            selectedPostId={selectedPostId}\n            setSelectedPostId={setSelectedPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {!!selectedPostId && (\n            <PostDetails\n              selectedPostId={selectedPostId}\n            />\n          )}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}